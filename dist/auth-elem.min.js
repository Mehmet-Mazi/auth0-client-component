import{Component}from"./Render.js";class AuthElem extends Component{constructor(){super(),this.state.auth0Client=null,this.shadow=this.attachShadow({mode:"open"})}async getUserData(){return await this.isAuthenticated()?this.state.auth0Client.getUser():"Login Required"}async isAuthenticated(){return!!this.state.auth0Client&&this.state.auth0Client.isAuthenticated()}async fetchAuthConfig(){this.hasAttribute(data-auth-config)&&(authConfigURL=this.getAttribute(data-auth-config));var t=await fetch(authConfigURL);if(t.ok)return t.json();throw t}async configureClient(){try{var t=await this.fetchAuthConfig();return this.state.auth0Client=await createAuth0Client({domain:t.domain,client_id:t.clientId,audience:t.audience}),[!0,null]}catch(t){return[!1,t]}}async signUp(){var t={screen_hint:"signup",redirect_uri:this.getAttribute("data-login-redirect")};await this.state.auth0Client.loginWithRedirect(t)}async login(){var t={redirect_uri:this.getAttribute("data-login-redirect")};await this.state.auth0Client.loginWithRedirect(t)}async logout(){this.state.auth0Client.logout({logoutParams:{returnTo:this.getAttribute("data-logout-redirect")}})}async render(){if(!this.shadow)return null;try{this.unauthenticatedTemplate=document.querySelector("#unauthenticated"),this.authenticatedTemplate=document.querySelector("#authenticated"),this.shadow.textContent="";var e,a,i=document.createElement("link");let t="auth-element-style";this.hasAttribute("data-stylesheet")&&(t=this.getAttribute("data-stylesheet")),i.setAttribute("href",t+".css"),i.setAttribute("rel","stylesheet"),i.setAttribute("type","text/css"),this.shadow.append(i),await this.isAuthenticated()?(e=this.authenticatedTemplate.content?.cloneNode(!0),this.shadow.append(e),this.shadow.querySelector("[data-logout]").addEventListener("click",async()=>{this.logout()})):(a=this.unauthenticatedTemplate.content?.cloneNode(!0),this.shadow.append(a),this.shadow.querySelector("[data-login]").addEventListener("click",async()=>{this.login()}),this.shadow.querySelector("[data-signup]").addEventListener("click",async()=>{this.signUp()}))}catch(t){return t}}async connectedCallback(){var t=await this.configureClient();if(!t[0])return"failed to connect to server: "+t[1];t=window.location.search;t.includes("code=")&&t.includes("state=")&&(await this.state.auth0Client.handleRedirectCallback(),window.history.replaceState({},document.title,"/"),this.render()),this.dispatchEvent(new Event("load"))}}customElements.define("auth-element",AuthElem);